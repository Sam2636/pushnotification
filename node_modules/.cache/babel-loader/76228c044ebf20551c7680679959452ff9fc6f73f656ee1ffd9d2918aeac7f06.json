{"ast":null,"code":"var _jsxFileName = \"/home/orgware/Documents/push-notification-demo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const notificationSound = new Audio(process.env.PUBLIC_URL + \"/notification-sound.mp3\"); // Replace with your sound file\n  const [permission, setPermission] = useState(Notification.permission);\n  const handleNotificationClick = () => {\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification.\");\n    } else if (permission === \"granted\") {\n      notificationSound.play(); // Play the notification sound\n      const notification = new Notification(\"Hello from Push Notification!\", {\n        icon: process.env.PUBLIC_URL + \"/logo192.png\",\n        body: \"This is a sample push notification using React.\"\n      });\n      notification.onclick = () => {\n        console.log(\"Notification clicked!\");\n      };\n    } else if (permission !== \"denied\") {\n      Notification.requestPermission().then(newPermission => {\n        if (newPermission === \"granted\") {\n          setPermission(newPermission);\n          handleNotificationClick();\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Push Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNotificationClick,\n      children: \"Show Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YPZ1hkaYqBbRb3aWFUR1Ns+JRx8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notificationSound","Audio","process","env","PUBLIC_URL","permission","setPermission","Notification","handleNotificationClick","window","alert","play","notification","icon","body","onclick","console","log","requestPermission","then","newPermission","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/orgware/Documents/push-notification-demo/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const notificationSound = new Audio(process.env.PUBLIC_URL + \"/notification-sound.mp3\"); // Replace with your sound file\n  const [permission, setPermission] = useState(Notification.permission);\n\n  const handleNotificationClick = () => {\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification.\");\n    } else if (permission === \"granted\") {\n      notificationSound.play(); // Play the notification sound\n      const notification = new Notification(\"Hello from Push Notification!\", {\n        icon: process.env.PUBLIC_URL + \"/logo192.png\",\n        body: \"This is a sample push notification using React.\",\n      });\n\n      notification.onclick = () => {\n        console.log(\"Notification clicked!\");\n      };\n    } else if (permission !== \"denied\") {\n      Notification.requestPermission().then((newPermission) => {\n        if (newPermission === \"granted\") {\n          setPermission(newPermission);\n          handleNotificationClick();\n        }\n      });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>React Push Notifications</h1>\n      <button onClick={handleNotificationClick}>Show Notification</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,iBAAiB,GAAG,IAAIC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,yBAAyB,CAAC,CAAC,CAAC;EACzF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAACY,YAAY,CAACF,UAAU,CAAC;EAErE,MAAMG,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,EAAE,cAAc,IAAIC,MAAM,CAAC,EAAE;MAC/BC,KAAK,CAAC,qDAAqD,CAAC;IAC9D,CAAC,MAAM,IAAIL,UAAU,KAAK,SAAS,EAAE;MACnCL,iBAAiB,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1B,MAAMC,YAAY,GAAG,IAAIL,YAAY,CAAC,+BAA+B,EAAE;QACrEM,IAAI,EAAEX,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,cAAc;QAC7CU,IAAI,EAAE;MACR,CAAC,CAAC;MAEFF,YAAY,CAACG,OAAO,GAAG,MAAM;QAC3BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC,CAAC;IACH,CAAC,MAAM,IAAIZ,UAAU,KAAK,QAAQ,EAAE;MAClCE,YAAY,CAACW,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAAEC,aAAa,IAAK;QACvD,IAAIA,aAAa,KAAK,SAAS,EAAE;UAC/Bd,aAAa,CAACc,aAAa,CAAC;UAC5BZ,uBAAuB,CAAC,CAAC;QAC3B;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEX,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC7B,OAAA;MAAQ8B,OAAO,EAAEnB,uBAAwB;MAAAc,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAAC3B,EAAA,CAjCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}